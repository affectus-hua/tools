[{"id":"daeb3fef.4fc4a","type":"function","z":"7bda05d3.ddf4e4","name":"TwitLib","func":"var Twit = context.global.twit;\n//var process = context.global.process;\n//process.env.TZ = 'Europe/Amsterdam';\n//var time = context.global.time(Date);\n \nvar d = new Date();\n//d.setTimezone('Europe/Amsterdam',true);\nconsole.log(d);\n\nvar T = new Twit({\n    consumer_key:         'YOUR CONSUMER KEY'\n  , consumer_secret:      'YOUR_SECRET_KEY'\n  , access_token:         'YOUR_ACCESS_TOKEN'\n  , access_token_secret:  'YOUR_SECRET_ACCESS'\n})\n\n//console.log(\"T:\"+JSON.stringify(T));\nvar sanFrancisco = [ '-122.75', '36.8', '-121.75', '37.8' ]\n\nvar madrid = [ '-3.75698', '40.39022' , '-3.62514' , '40.4903']\n//SW: 40.39022, -3.75698\n//NE: 40.4903, -3.62514\n\n\nvar stream = T.stream('statuses/filter', { locations: madrid });\n\nstream.on('error', function (error) {\n  //...\n  console.log(error);\n})\n\nstream.on('tweet', function (tweet) {\n  console.log(tweet);\n  msg.payload=tweet;\n  node.send(msg);\n  \n})\n\n\nif (msg.payload=='stop'){\n    stream.stop();\n}\n//generic for all messages in order not to handle all available events\nstream.on('message', function (message) {\n    console.log(message);\n  \n  //...\n})\n\nreturn msg;","outputs":1,"noerr":0,"x":258.61115646362305,"y":179.1499900817871,"wires":[["129cfc1d.c5293c"]]},{"id":"a15b8465.367338","type":"debug","z":"7bda05d3.ddf4e4","name":"","active":false,"console":"false","complete":"payload","x":1094.6944427490234,"y":182.56666564941406,"wires":[]},{"id":"a8a768ea.9be88","type":"inject","z":"7bda05d3.ddf4e4","name":"Start","topic":"","payload":"stop","payloadType":"string","repeat":"","crontab":"","once":false,"x":133.61111450195312,"y":245.48332977294922,"wires":[["daeb3fef.4fc4a"]]},{"id":"1f444d39.c21093","type":"function","z":"7bda05d3.ddf4e4","name":"Initialize Context Variables Array (Timeslot+Counter)","func":"context.global.currentBoundingBoxes= [];\n\nvar today = new Date();\n\nvar currentTime = new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), 0, 0);\ncontext.global.currentTimeslot=Date.parse(currentTime);//to convert to milliseconds instead of 12:00:00 etc.\n\n\nreturn msg;","outputs":1,"x":366.361083984375,"y":722.1498737335205,"wires":[[]]},{"id":"fb04ae2b.9e9f98","type":"function","z":"7bda05d3.ddf4e4","name":"Print Global Variables","func":"//msg.timeSlot=context.global.currentTimeslot;\n//msg.counter=context.global.currentCounter;\nmsg.currentBoundingBoxes=context.global.currentBoundingBoxes;\nreturn msg;","outputs":1,"x":749.2301330566406,"y":670.5193078517914,"wires":[["36f4149f.e46874"]]},{"id":"36f4149f.e46874","type":"debug","z":"7bda05d3.ddf4e4","name":"","active":true,"console":"false","complete":"currentBoundingBoxes","x":763.8492889404297,"y":726.8048477172852,"wires":[]},{"id":"9232e74e.71daa8","type":"inject","z":"7bda05d3.ddf4e4","name":"PRINT","topic":"","payload":"","payloadType":"none","repeat":"","crontab":"","once":false,"x":574.0872917175293,"y":665.8525733947754,"wires":[["fb04ae2b.9e9f98"]]},{"id":"cc12e29c.8fc72","type":"inject","z":"7bda05d3.ddf4e4","name":"INITIALIZATION","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":127.4324951171875,"y":679.3999347686768,"wires":[["1f444d39.c21093"]]},{"id":"129cfc1d.c5293c","type":"function","z":"7bda05d3.ddf4e4","name":"cropTweet","func":"//ts (long) required\n//text (string) required\n//lon (double) required\n//lat (double) required\n//twitter_id (string) required\n//sentiment (string) optional \n\nif (msg.payload.coordinates){\n    \nvar ts=Number(msg.payload.timestamp_ms);\nvar text=msg.payload.text;\nvar lon=msg.payload.coordinates.coordinates[0];\nvar lat=msg.payload.coordinates.coordinates[1];\n//console.log(\"THIS IS THE PRINTED\"+lon);\nvar twitter_id=msg.payload.user.id_str;\nmsg.payload={};//PROPER INITIALIZATION, SHOULD NOT BE DONE WITH JUST \"\"\nmsg.payload.ts=ts;\nmsg.payload.text=text;\nmsg.payload.lon=lon;\nmsg.payload.lat=lat;\nmsg.payload.twitter_id=twitter_id;\nmsg.payload.sentiment=\"\";\nnode.send(msg);\n}","outputs":1,"x":440.27782440185547,"y":155.14999198913574,"wires":[["133d0174.90160f","cec46fef.9887a8"]]},{"id":"15633eb2.388511","type":"sentiment","z":"7bda05d3.ddf4e4","name":"","x":832.2777481079102,"y":119.8166675567627,"wires":[["c6654d9d.d4eca"]]},{"id":"133d0174.90160f","type":"function","z":"7bda05d3.ddf4e4","name":"move payload","func":"msg.standard_payload=msg.payload;\nmsg.payload=msg.payload.text;\n\n\nreturn msg;","outputs":1,"x":642.2778091430664,"y":88.48335075378418,"wires":[["15633eb2.388511"]]},{"id":"c6654d9d.d4eca","type":"function","z":"7bda05d3.ddf4e4","name":"RestorePayload_Add_sentiment_score","func":"msg.payload=msg.standard_payload;\nmsg.standard_payload={};\nmsg.payload.sentiment=msg.sentiment.score;\n\nreturn msg;","outputs":1,"x":1087.6111145019531,"y":66.48332977294922,"wires":[["a15b8465.367338"]]},{"id":"29e59758.a0016","type":"http in","z":"7bda05d3.ddf4e4","name":"Add Bounding Box Service","url":"/PostBox","method":"post","swaggerDoc":"","x":203.00001525878906,"y":442.53890228271484,"wires":[["31f8e547.a8e38a","729bf42f.4c1b6c"]]},{"id":"31f8e547.a8e38a","type":"function","z":"7bda05d3.ddf4e4","name":"AddBoxToContextArray","func":"\n//if not exists already in the array needs to be inserted in the proper object (search by corners)\n\n//if not exists already\n//uncomment   var GPS=msg.payload.GPS;\n//uncomment if (context.global.currentBoundingBoxes.map(function(e) { return e.boxes.GPS; }).indexOf(GPS)===-1){\n//one timeslot for all\n//msg.payload.currentTimeslot= currentTime;\n//the counter needs to be per box\nmsg.payload.currentCounter=0;\nmsg.payload.RegistrationTime=Date.now();\n//get data from payload and add to array\n//var obj = msg.payload;\nvar lengthsize=context.global.currentBoundingBoxes.length;\nvar alreadyIn=false;\nfor (i=0;i<lengthsize; i++){\n    if (msg.payload.routeID===context.global.currentBoundingBoxes[i].routeID){\n     alreadyIn=true;\n    }\n\n}\nif (alreadyIn===false){\n    context.global.currentBoundingBoxes.push(msg.payload);\n}\n//uncomment}\nreturn msg;","outputs":1,"x":442.99993896484375,"y":448.20555877685547,"wires":[["b27f8698.9e0cf8","8cfd1428.2b2de"]]},{"id":"b27f8698.9e0cf8","type":"http response","z":"7bda05d3.ddf4e4","name":"","x":744.9047508239746,"y":446.5864963531494,"wires":[]},{"id":"23dd9e12.9e377a","type":"inject","z":"7bda05d3.ddf4e4","name":"Send ALL Madrid Bounding Box coordinates","topic":"","payload":"{\"GPS\": { \"SW\":{ \"lon\":-3.75698, \"lat\":40.39022 }, \"NE\":{ \"lon\":-3.62514, \"lat\":40.4903 } },\"userid\": \"1\",\"routeID\":\"5\" }","payloadType":"string","repeat":"","crontab":"","once":false,"x":201.86111450195312,"y":358.39598846435547,"wires":[["9993138c.62bca8"]]},{"id":"dd60a73a.942e","type":"http request","z":"7bda05d3.ddf4e4","name":"To Bounding Box service","method":"POST","ret":"txt","url":"http://localhost:1882/ep/PostBox","x":510.8571014404297,"y":325.3960247039795,"wires":[[]]},{"id":"729bf42f.4c1b6c","type":"debug","z":"7bda05d3.ddf4e4","name":"","active":false,"console":"false","complete":"true","x":454.19047927856445,"y":398.6896209716797,"wires":[]},{"id":"b60c0656.e06ac","type":"http in","z":"7bda05d3.ddf4e4","name":"Get All Counters Service","url":"/counters","method":"get","x":186.33333587646484,"y":522.5388240814209,"wires":[["4d90633e.96fb74"]]},{"id":"4d90633e.96fb74","type":"function","z":"7bda05d3.ddf4e4","name":"Retrieve Counter","func":"//msg.payload.timeSlot=context.global.currentTimeslot;\n//msg.payload.counter=context.global.currentCounter;\n\n//search around boundingboxes for routeid in msg.payload.routeID\nvar lengthsize=context.global.currentBoundingBoxes.length;\n\nfor (i=0;i<lengthsize; i++){\n    if (msg.payload.routeID===context.global.currentBoundingBoxes[i].routeID    ){\n        //delete msg.payload.routeID;\n        msg.payload.box=context.global.currentBoundingBoxes[i];\n        msg.payload.timeSlot=context.global.currentTimeslot;\n        break;\n    }\n\n}\ndelete msg.payload.routeID;\n//msg.payload.boxes=context.global.currentBoundingBoxes;\n//msg.payload.timeSlot=context.global.currentTimeslot;\nreturn msg;","outputs":1,"x":396.3332977294922,"y":540.872189203898,"wires":[["867a245d.c34488","4b35c519.38b924"]]},{"id":"867a245d.c34488","type":"http response","z":"7bda05d3.ddf4e4","name":"","x":572.9999389648438,"y":538.9277057647705,"wires":[]},{"id":"9993138c.62bca8","type":"json","z":"7bda05d3.ddf4e4","name":"","x":395.69444056919633,"y":275.70951298304965,"wires":[["dd60a73a.942e"]]},{"id":"48d376b5.8f3fa8","type":"comment","z":"7bda05d3.ddf4e4","name":"BOXES may overlap","info":"In case of overlap between boxes, we need to add both counters.\nTherefore the loop should not break after finding a match,\nit should continue in any case through the entire array of boxes\n\nCount is effective from the registration timestamp\nTherefore one could have two registrations of the same box with different counts\nif one registration was performed at e.g. 15:15 and one at 15:30\n(the difference would be the tweets between 15:15 and 15:30)\nPotentially a timestamp of registration can be included in the bounding boxes\nentry in the array if needed","x":688.5516586303711,"y":279.99524307250977,"wires":[]},{"id":"7d893cb4.2f5afc","type":"inject","z":"7bda05d3.ddf4e4","name":"GET BOX FOR A ROUTEID","topic":"","payload":"routeID=5","payloadType":"string","repeat":"","crontab":"","once":false,"x":204.26588439941406,"y":802.3762130737305,"wires":[["3f590c14.fdde8c"]]},{"id":"8fd1fe34.8dde48","type":"http request","z":"7bda05d3.ddf4e4","name":"","method":"GET","ret":"txt","url":"","x":451.4087262834821,"y":851.4237986973353,"wires":[["b64ee01b.2c8548"]]},{"id":"b64ee01b.2c8548","type":"debug","z":"7bda05d3.ddf4e4","name":"","active":true,"console":"false","complete":"payload","x":637.1230163574219,"y":846.4238204956055,"wires":[]},{"id":"8cfd1428.2b2de","type":"debug","z":"7bda05d3.ddf4e4","name":"","active":false,"console":"false","complete":"true","x":767.1230163574219,"y":368.5666732788086,"wires":[]},{"id":"e5399132.9a50b8","type":"inject","z":"7bda05d3.ddf4e4","name":"Send Smaller Bounding Box B coordinates","topic":"","payload":"{\"GPS\": { \"SW\":{ \"lon\":-3.694734, \"lat\":40.415844 }, \"NE\":{ \"lon\":-3.686494, \"lat\":40.420810 } } , \"userid\": \"2\",\"routeID\":\"3\"}","payloadType":"string","repeat":"","crontab":"","once":false,"x":180.26593017578125,"y":311.7571334838867,"wires":[["9993138c.62bca8"]]},{"id":"4b35c519.38b924","type":"debug","z":"7bda05d3.ddf4e4","name":"","active":true,"console":"false","complete":"payload","x":742.8373107910156,"y":576.6619186401367,"wires":[]},{"id":"3f590c14.fdde8c","type":"function","z":"7bda05d3.ddf4e4","name":"Configure URL","func":"msg.url=\"http://localhost:1880/counters?\"+msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":281.6468505859375,"y":853.0903854370117,"wires":[["8fd1fe34.8dde48"]]},{"id":"e909503a.0d9a18","type":"http in","z":"7bda05d3.ddf4e4","name":"Delete Finished Route Box","url":"/deleteBox","method":"get","swaggerDoc":"","x":125,"y":594.5388717651367,"wires":[["bd91d257.255a98","4b35c519.38b924"]]},{"id":"bd91d257.255a98","type":"function","z":"7bda05d3.ddf4e4","name":"Delete Box for route id","func":"//msg.payload.timeSlot=context.global.currentTimeslot;\n//msg.payload.counter=context.global.currentCounter;\n\n//search around boundingboxes for routeid in msg.payload.routeID\nvar lengthsize=context.global.currentBoundingBoxes.length;\n\nfor (i=0;i<lengthsize; i++){\n    if (msg.payload.routeID===context.global.currentBoundingBoxes[i].routeID    ){\n        //delete msg.payload.routeID;\n        delete context.global.currentBoundingBoxes.splice(i, 1);\n        \n        break;\n    }\n\n}\ndelete msg.payload.routeID;\n//msg.payload.boxes=context.global.currentBoundingBoxes;\n//msg.payload.timeSlot=context.global.currentTimeslot;\nreturn msg;","outputs":1,"x":375,"y":614.261100769043,"wires":[["345e29ff.8ca8ce"]]},{"id":"345e29ff.8ca8ce","type":"http response","z":"7bda05d3.ddf4e4","name":"","x":543.3332824707031,"y":615.9277267456055,"wires":[]},{"id":"d452a859.242ac8","type":"inject","z":"7bda05d3.ddf4e4","name":"Delete BOX FOR A ROUTEID","topic":"","payload":"routeID=5","payloadType":"string","repeat":"","crontab":"","once":false,"x":205,"y":920.9277267456055,"wires":[["9eda0bda.14d268"]]},{"id":"9eda0bda.14d268","type":"function","z":"7bda05d3.ddf4e4","name":"Configure URL","func":"msg.url=\"http://localhost:1880/deleteBox?\"+msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":282.38096618652344,"y":971.6418991088867,"wires":[["ddd81534.5f0aa","12ecf759.9f9251"]]},{"id":"ddd81534.5f0aa","type":"http request","z":"7bda05d3.ddf4e4","name":"Delete Box call","method":"GET","ret":"txt","url":"","x":452.14284188406805,"y":969.9753123692103,"wires":[["12ecf759.9f9251"]]},{"id":"12ecf759.9f9251","type":"debug","z":"7bda05d3.ddf4e4","name":"","active":true,"console":"false","complete":"payload","x":637.8571319580078,"y":964.9753341674805,"wires":[]},{"id":"cec46fef.9887a8","type":"function","z":"7bda05d3.ddf4e4","name":"filterTweetsManagecounters","func":"//get tweet GPS----they are already numbers\nvar px=msg.payload.lon;\nvar py=msg.payload.lat;\nvar lengthsize=context.global.currentBoundingBoxes.length;\nvar thisTime=new Date();\nvar Slot=new Date();\nSlot.setTime(context.global.currentTimeslot);//global variable seems to maintain only the milliseconds value and not the Date object\n\nvar hoursDiff=hoursBetween(Slot, thisTime);\nmsg.hoursDiff=hoursDiff;\nif (hoursDiff>=1){\n    k=0;\n    var today = new Date();\n    var currentTime = new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), 0, 0);\n    currentTime=Date.parse(currentTime);//to convert to milliseconds instead of 12:00:00 etc.\n    context.global.currentTimeslot=currentTime;\n    for (k = 0; k < lengthsize; k++) {\n        \n        //reset counter---perhaps we need to reset all counters????\n        context.global.currentBoundingBoxes[k].currentCounter=0;\n    }\n    \n    \n}\n//loop around currentBoundingBoxes to check if the specific tweet is included in any of them\nfor (i=0;i<lengthsize; i++){\n    //get GPS of this box\n    //SW\n    var ix=context.global.currentBoundingBoxes[i].GPS.SW.lon;\n    var iy=context.global.currentBoundingBoxes[i].GPS.SW.lat;\n    //NE\n    var ax=context.global.currentBoundingBoxes[i].GPS.NE.lon;\n    var ay=context.global.currentBoundingBoxes[i].GPS.NE.lat;\n    //calculate if in box\n\n    if (ix<px&&px<ax&&iy<py&&py<ay) {\n        \n        \n        if (hoursDiff<1){ //same hour slot\n            context.global.currentBoundingBoxes[i].currentCounter=context.global.currentBoundingBoxes[i].currentCounter+1;\n        }\n        \n    }\n\n}\n\nfunction hoursBetween(first, second) {\n\n    // Copy date parts of the timestamps, discarding the time parts.\n    //var one = new Date(first.getFullYear(), first.getMonth(), first.getDate());\n    //var two = new Date(second.getFullYear(), second.getMonth(), second.getDate());\n\n    // Do the math.\n    var millisecondsPerHour = 1000 * 60 * 60 ;\n    var millisBetween = second.getTime() - first.getTime();\n    var hours = millisBetween / millisecondsPerHour;\n\n    // Round down.\n    return Math.floor(hours);\n}\nreturn msg;","outputs":1,"noerr":0,"x":690.4166259765625,"y":223.28890991210938,"wires":[[]]}]